/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R          &kp T           &kp Y    &kp U      &kp I      &kp O    &kp P     &kp ESCAPE
&kp LCTRL  &kp A  &kp S  &kp D  &kp F          &kp G           &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V          &kp B           &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp DEL
                         &mo 1  &kp BACKSPACE  &kp LEFT_GUI    &kp RET  &kp SPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp F2          &kp F3             &kp F4           &kp F5           &kp F6              &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&kp LCTRL   &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW  &trans              &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp C_PREV    &kp C_NEXT
&kp LSHIFT  &trans          &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE       &kp C_PLAY_PAUSE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                               &trans           &trans           &kp LEFT_GUI        &kp RET       &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH      &kp DLLR       &kp PRCNT       &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR          &kp RPAR           &kp BSLH
&kp LCTRL  &kp N1    &kp N2  &kp N3        &kp N4         &kp N5          &kp PLUS   &kp EQUAL       &kp GRAVE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&kp LSHFT  &kp N6    &kp N7  &kp N8        &kp N9         &kp N0          &kp MINUS  &kp UNDERSCORE  &kp TILDE        &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp DELETE
                             &kp LEFT_ALT  &kp BACKSPACE  &kp LEFT_GUI    &kp RET    &kp SPACE       &kp RALT
            >;
        };

        Lighting {
            bindings = <
&bl BL_TOG  &bl BL_CYCLE  &trans  &trans  &trans  &trans    &trans                            &trans           &trans           &trans           &trans           &rgb_ug RGB_TOG
&bl BL_INC  &bl BL_ON     &trans  &trans  &trans  &trans    &rgb_ug RGB_COLOR_HSB(136,63,53)  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI
&bl BL_DEC  &bl BL_OFF    &trans  &trans  &trans  &trans    &rgb_ug RGB_COLOR_HSB(0,0,100)    &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD
                                  &trans  &trans  &trans    &trans                            &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Lighting {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
